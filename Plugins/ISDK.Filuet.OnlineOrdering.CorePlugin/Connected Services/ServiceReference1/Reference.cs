//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange", ConfigurationName="ServiceReference1.HLOrdersPortType")]
    public interface HLOrdersPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.1c.ru/SSL/Exchange#HLOrders:CheckPartner", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.CheckPartnerResponse> CheckPartnerAsync(ServiceReference1.CheckPartnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.1c.ru/SSL/Exchange#HLOrders:GetOrderStatuses", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderStatusesResponse> GetOrderStatusesAsync(ServiceReference1.GetOrderStatusesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.1c.ru/SSL/Exchange#HLOrders:GetStocks", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetStocksResponse> GetStocksAsync(ServiceReference1.GetStocksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.1c.ru/SSL/Exchange#HLOrders:SendOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SendOrderResponse> SendOrderAsync(ServiceReference1.SendOrderRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckPartnerRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckPartner", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.CheckPartnerRequestBody Body;
        
        public CheckPartnerRequest()
        {
        }
        
        public CheckPartnerRequest(ServiceReference1.CheckPartnerRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class CheckPartnerRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string IDPartner;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string INNPartner;
        
        public CheckPartnerRequestBody()
        {
        }
        
        public CheckPartnerRequestBody(string IDPartner, string INNPartner)
        {
            this.IDPartner = IDPartner;
            this.INNPartner = INNPartner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckPartnerResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckPartnerResponse", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.CheckPartnerResponseBody Body;
        
        public CheckPartnerResponse()
        {
        }
        
        public CheckPartnerResponse(ServiceReference1.CheckPartnerResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class CheckPartnerResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string result;
        
        public CheckPartnerResponseBody()
        {
        }
        
        public CheckPartnerResponseBody(string @return, string result)
        {
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOrderStatusesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetOrderStatuses", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.GetOrderStatusesRequestBody Body;
        
        public GetOrderStatusesRequest()
        {
        }
        
        public GetOrderStatusesRequest(ServiceReference1.GetOrderStatusesRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class GetOrderStatusesRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string OrdersList;
        
        public GetOrderStatusesRequestBody()
        {
        }
        
        public GetOrderStatusesRequestBody(string OrdersList)
        {
            this.OrdersList = OrdersList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOrderStatusesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetOrderStatusesResponse", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.GetOrderStatusesResponseBody Body;
        
        public GetOrderStatusesResponse()
        {
        }
        
        public GetOrderStatusesResponse(ServiceReference1.GetOrderStatusesResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class GetOrderStatusesResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string result;
        
        public GetOrderStatusesResponseBody()
        {
        }
        
        public GetOrderStatusesResponseBody(string @return, string result)
        {
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStocksRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStocks", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.GetStocksRequestBody Body;
        
        public GetStocksRequest()
        {
        }
        
        public GetStocksRequest(ServiceReference1.GetStocksRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetStocksRequestBody
    {
        
        public GetStocksRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStocksResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStocksResponse", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.GetStocksResponseBody Body;
        
        public GetStocksResponse()
        {
        }
        
        public GetStocksResponse(ServiceReference1.GetStocksResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class GetStocksResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string @return;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string result;
        
        public GetStocksResponseBody()
        {
        }
        
        public GetStocksResponseBody(string @return, string result)
        {
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendOrderRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendOrder", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.SendOrderRequestBody Body;
        
        public SendOrderRequest()
        {
        }
        
        public SendOrderRequest(ServiceReference1.SendOrderRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class SendOrderRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string OrderText;
        
        public SendOrderRequestBody()
        {
        }
        
        public SendOrderRequestBody(string OrderText)
        {
            this.OrderText = OrderText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendOrderResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendOrderResponse", Namespace="http://www.1c.ru/SSL/Exchange", Order=0)]
        public ServiceReference1.SendOrderResponseBody Body;
        
        public SendOrderResponse()
        {
        }
        
        public SendOrderResponse(ServiceReference1.SendOrderResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.1c.ru/SSL/Exchange")]
    public partial class SendOrderResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public string @return;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string result;
        
        public SendOrderResponseBody()
        {
        }
        
        public SendOrderResponseBody(string @return, string result)
        {
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface HLOrdersPortTypeChannel : ServiceReference1.HLOrdersPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class HLOrdersPortTypeClient : System.ServiceModel.ClientBase<ServiceReference1.HLOrdersPortType>, ServiceReference1.HLOrdersPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HLOrdersPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(HLOrdersPortTypeClient.GetBindingForEndpoint(endpointConfiguration), HLOrdersPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HLOrdersPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HLOrdersPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HLOrdersPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HLOrdersPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HLOrdersPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.CheckPartnerResponse> ServiceReference1.HLOrdersPortType.CheckPartnerAsync(ServiceReference1.CheckPartnerRequest request)
        {
            return base.Channel.CheckPartnerAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CheckPartnerResponse> CheckPartnerAsync(string IDPartner, string INNPartner)
        {
            ServiceReference1.CheckPartnerRequest inValue = new ServiceReference1.CheckPartnerRequest();
            inValue.Body = new ServiceReference1.CheckPartnerRequestBody();
            inValue.Body.IDPartner = IDPartner;
            inValue.Body.INNPartner = INNPartner;
            return ((ServiceReference1.HLOrdersPortType)(this)).CheckPartnerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetOrderStatusesResponse> ServiceReference1.HLOrdersPortType.GetOrderStatusesAsync(ServiceReference1.GetOrderStatusesRequest request)
        {
            return base.Channel.GetOrderStatusesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetOrderStatusesResponse> GetOrderStatusesAsync(string OrdersList)
        {
            ServiceReference1.GetOrderStatusesRequest inValue = new ServiceReference1.GetOrderStatusesRequest();
            inValue.Body = new ServiceReference1.GetOrderStatusesRequestBody();
            inValue.Body.OrdersList = OrdersList;
            return ((ServiceReference1.HLOrdersPortType)(this)).GetOrderStatusesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetStocksResponse> ServiceReference1.HLOrdersPortType.GetStocksAsync(ServiceReference1.GetStocksRequest request)
        {
            return base.Channel.GetStocksAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetStocksResponse> GetStocksAsync()
        {
            ServiceReference1.GetStocksRequest inValue = new ServiceReference1.GetStocksRequest();
            inValue.Body = new ServiceReference1.GetStocksRequestBody();
            return ((ServiceReference1.HLOrdersPortType)(this)).GetStocksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SendOrderResponse> ServiceReference1.HLOrdersPortType.SendOrderAsync(ServiceReference1.SendOrderRequest request)
        {
            return base.Channel.SendOrderAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SendOrderResponse> SendOrderAsync(string OrderText)
        {
            ServiceReference1.SendOrderRequest inValue = new ServiceReference1.SendOrderRequest();
            inValue.Body = new ServiceReference1.SendOrderRequestBody();
            inValue.Body.OrderText = OrderText;
            return ((ServiceReference1.HLOrdersPortType)(this)).SendOrderAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.HLOrdersSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.HLOrdersSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.HLOrdersSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://erp.filuet.ru:8090/UT_UZ/ws/HLOrders/");
            }
            if ((endpointConfiguration == EndpointConfiguration.HLOrdersSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://erp.filuet.ru:8090/UT_UZ/ws/HLOrders/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            HLOrdersSoap,
            
            HLOrdersSoap12,
        }
    }
}

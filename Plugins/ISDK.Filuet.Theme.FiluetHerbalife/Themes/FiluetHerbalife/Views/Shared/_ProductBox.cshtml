@model ProductOverviewModel
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var customer = await workContext.GetCurrentCustomerAsync();
    var cart = (await shoppingCartService.GetShoppingCartAsync(customer))
        .Where(sci => sci.ShoppingCartType == ShoppingCartType.ShoppingCart)
        .ToList();

    var ratingPercent = 0;
    if (Model.ReviewOverviewModel.TotalReviews != 0)
    {
        ratingPercent = ((Model.ReviewOverviewModel.RatingSum) / Model.ReviewOverviewModel.TotalReviews);
    }

    var shoppingCartProduct = cart.FirstOrDefault(c => c.ProductId == Model.Id);
    var picture = Model.PictureModels.FirstOrDefault();
    var showallProductReview = Model.CustomProperties.ContainsValue(NopFiluetCommonDefaults.ShowProductReview);
}

<div class="product" data-productid="@Model.Id">
    @*New Code for Show rating in productbox*@
    @if (showallProductReview)
    {
        <div class="rating">
            <svg class="icon"><use xlink:href="@Url.Content("~/Themes/FiluetHerbalife/Content/images/sprite.svg#ic_star")"></use></svg>
            <div><span>@ratingPercent</span>/5</div>
        </div>
    }

    @*Old Code for Show rating in productbox*@
    @*<div class="rating">
        <svg class="icon"><use xlink:href="@Url.Content("~/Themes/FiluetHerbalife/Content/images/sprite.svg#ic_star")"></use></svg>
        <div><span>@Model.ReviewOverviewModel.RatingSum</span>/5</div>
    </div>*@


    
    <a href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))" class="thumb">
        <div><img data-src="@picture?.ImageUrl" alt="@picture?.AlternateText" src="@picture?.ImageUrl"></div>
    </a>


    @*    This code is from 4.6 but coming in issus in the design *@
@*    <div class="picture">
        @if (Model.PictureModels.Count > 1)
        {
            <div class="swiper" id="swiper-@Model.Id" dir="@Html.GetUIDirection(!await Html.ShouldUseRtlThemeAsync())">
                <div class="swiper-wrapper">
                    @foreach (var picture in Model.PictureModels)
                    {
                        <a class="swiper-slide" href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))" title="@picture.Title">
                            <img alt="@picture.AlternateText" src="@picture.ImageUrl" title="@picture.Title" />
                        </a>
                    }
                </div>
                <!-- Add Pagination -->
                <div class="swiper-pagination"></div>
            </div>

            <script asp-location="Footer">
                new Swiper('#swiper-@(Model.Id)', {
                    pagination: {
                        clickable: true,
                        el: '.swiper-pagination',
                    },
                });
            </script>
        }
        else
        {
            var picture = Model.PictureModels.FirstOrDefault();
            <a href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))" title="@picture?.Title">
                <img alt="@picture?.AlternateText" src="@picture?.ImageUrl" title="@picture?.Title" />
            </a>
        }
    </div>*@


    <div class="info" data-productid="@Model.Id">
        <div class="name">
            <a href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))"> @Model.Name</a>
        </div>

        <div class="sku">@Model.Sku</div>

        <div class="desc">@Html.Raw(Model.ShortDescription)</div>
        <br>
    </div>

    <div class="price">
        <div>@Model.ProductPrice.Price</div>
        <div>
            @if (Model.CustomProperties.ContainsKey(NopFiluetCommonDefaults.VolumePoints))
            {
                @T("HBL.Baltic.OnlineOrdering.ShoppingPlugin.Resources.VolumePoints", Model.CustomProperties[NopFiluetCommonDefaults.VolumePoints])
            }
        </div>
    </div>

    @if (!Model.ProductPrice.DisableBuyButton)
    {
        <div class="buy">
            <button class="buy_btn @(shoppingCartProduct != null ? "active" : "")" onclick="addproducttocart('@addtocartlink', @Model.Id, this);return false;">
                <span>@T("ISDK.Filuet.Theme.FiluetHerbalife.AddToBasket")</span>
                <span>@T("ShoppingCart.AddToCart")</span>
            </button>

            <div class="success">

                <div class="amount" data-product-id="@Model.Id">
                    <button type="button" class="minus">-</button>

                    <input type="text" value="@(shoppingCartProduct?.Quantity ?? 1)" class="input" data-minimum="0" data-maximum="99" data-step="1" data-unit="@T("ShoppingCart.Currency")" maxlength="2">

                    <button type="button" class="plus">+</button>
                </div>
            </div>

            <form class="shopping-cart-form" method="post" enctype="multipart/form-data" style="display: none;">

                <input class="removefromcart" type="checkbox" name="removefromcart" value="@(shoppingCartProduct?.Id)">

                @if (shoppingCartProduct != null)
                {
                    <input class="itemquantity" name="itemquantity@(shoppingCartProduct.Id)" value="@(shoppingCartProduct.Quantity)">
                }

                <input name="updatecart" value="@T("ISDK.Filuet.Theme.FiluetHerbalife.ShoppingCart.UpdateCart")">

            </form>
        </div>
    }
    else
    {
        <div class="buy">
            <div style="height: 44px;"></div>
        </div>
    }
</div>